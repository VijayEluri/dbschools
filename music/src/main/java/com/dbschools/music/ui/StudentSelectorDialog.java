package com.dbschools.music.ui;

import com.dbschools.music.dao.RemoteDao;
import com.dbschools.music.events.Event;
import com.dbschools.music.events.EventObserver;
import com.dbschools.music.events.TypeCode;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collection;

import javax.swing.DefaultListModel;
import javax.swing.JList;

import com.dbschools.music.orm.Group;
import com.dbschools.music.orm.Instrument;

/**
 * A dialog allowing the selection of students by group and instrument.
 * 
 * @author David C. Briccetti
 */
public class StudentSelectorDialog extends javax.swing.JDialog {
    private static final long serialVersionUID = -5126944784986561307L;
    private final DefaultListModel groupsModel = new DefaultListModel();
    private final DefaultListModel instrumentsModel = new DefaultListModel();
    private final Collection<Group> selectedGroups = new ArrayList<Group>();
    private final Collection<Instrument> selectedInstruments = new ArrayList<Instrument>();
    private boolean canceled = false;
    
    public StudentSelectorDialog(java.awt.Frame parent, final RemoteDao remoteDao,
            final boolean includeTestingGroupsOnly) {
        super(parent, true);
        initComponents();
        setLocationRelativeTo(parent);
        groupsList.setModel(groupsModel);
        instrumentsList.setModel(instrumentsModel);
        setGroups(remoteDao.getGroups(), includeTestingGroupsOnly);
        setInstruments(remoteDao.getInstruments());
        allGroups.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                selectAllGroups();
            }});
        allInstruments.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                selectAllInstruments();
            }});
        remoteDao.addEventObserver(new EventObserver() {
            public void notify(Event event) {
                if (event.getTypeCode() == TypeCode.UPDATE_OBJECT && event.getDetails() instanceof Group) {
                    setGroups(remoteDao.getGroups(), includeTestingGroupsOnly);
                }
            }
        });
        getRootPane().setDefaultButton(selectButton);
    }
    
    public void setGroups(Collection<Group> groups, boolean includeTestingGroupsOnly) {
        groupsModel.clear();
        for (Group group : groups) {
            if (! includeTestingGroupsOnly || group.isDoesTesting()) {
                groupsModel.addElement(new NamedItemDisplayAdapter(group));
            }
        }
        selectAllGroups();
    }

    private void selectAllGroups() {
        groupsList.getSelectionModel().setSelectionInterval(0, groupsModel.size() - 1);
    }
    
    public void setInstruments(Collection<Instrument> instruments) {
        instrumentsModel.clear();
        for (Instrument inst : instruments) {
            instrumentsModel.addElement(new NamedItemDisplayAdapter(inst));
        }
        selectAllInstruments();
    }

    private void selectAllInstruments() {
        instrumentsList.getSelectionModel().setSelectionInterval(0, instrumentsModel.size() - 1);
    }
    
    public Collection<Group> getSelectedGroups() {
        return selectedGroups;
    }
    
    public Collection<Instrument> getSelectedInstruments() {
        return selectedInstruments;
    }

    public int getGroupsCount() {
        return groupsModel.getSize();
    }

    public int getInstrumentsCount() {
        return instrumentsModel.getSize();
    }

    public boolean isCanceled() {
        return canceled;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane1 = new javax.swing.JScrollPane();
        instrumentsList = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        groupsList = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        allGroups = new javax.swing.JButton();
        allInstruments = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        selectButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Student Selection Dialog");
        jScrollPane1.setPreferredSize(new java.awt.Dimension(260, 300));
        instrumentsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                instrumentsListMouseClicked(evt);
            }
        });

        jScrollPane1.setViewportView(instrumentsList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        getContentPane().add(jScrollPane1, gridBagConstraints);

        jLabel2.setText("Instruments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 6, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        jScrollPane2.setPreferredSize(new java.awt.Dimension(260, 300));
        groupsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                groupsListMouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(groupsList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        getContentPane().add(jScrollPane2, gridBagConstraints);

        jLabel1.setText("Groups");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 6, 0, 0);
        getContentPane().add(jLabel1, gridBagConstraints);

        allGroups.setMnemonic('G');
        allGroups.setText("All Groups");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        getContentPane().add(allGroups, gridBagConstraints);

        allInstruments.setMnemonic('I');
        allInstruments.setText("All Instruments");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        getContentPane().add(allInstruments, gridBagConstraints);

        selectButton.setText("OK");
        selectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(selectButton)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cancelButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(selectButton)))
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 0);
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void groupsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_groupsListMouseClicked
        processSelectionOnDoubleClick(evt);
    }//GEN-LAST:event_groupsListMouseClicked

    private void instrumentsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_instrumentsListMouseClicked
        processSelectionOnDoubleClick(evt);
    }//GEN-LAST:event_instrumentsListMouseClicked

    private void processSelectionOnDoubleClick(java.awt.event.MouseEvent evt) {
        if (evt.getClickCount() == 2) {
            processSelection();
        }
    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        canceled = true;
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void selectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectButtonActionPerformed
        processSelection();
    }//GEN-LAST:event_selectButtonActionPerformed

    private void processSelection() {
        canceled = false;
        buildListFromSelected(groupsList, selectedGroups);
        buildListFromSelected(instrumentsList, selectedInstruments);
        dispose();
    }
    
    private <T> void buildListFromSelected(JList jlist, Collection<T> col) {
        col.clear();
        for (Object o : jlist.getSelectedValues()) {
            NamedItemDisplayAdapter nida = (NamedItemDisplayAdapter) o;
            col.add((T) nida.getNamedItem());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allGroups;
    private javax.swing.JButton allInstruments;
    private javax.swing.JButton cancelButton;
    private javax.swing.JList groupsList;
    private javax.swing.JList instrumentsList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton selectButton;
    // End of variables declaration//GEN-END:variables

}
