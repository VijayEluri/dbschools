package com.dbschools.picker;

import java.util.List;
import javax.swing.JFrame;

/**
 * Main application window for Name Picker.
 */
public class App extends JFrame {
    
    /** Creates new form app */
    public App() {
        initComponents();
        setLocationRelativeTo(null);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new com.dbschools.picker.Panel();
        panel1.setAppFrame(this);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/dbschools/picker/strings"); // NOI18N
        setTitle(bundle.getString("title")); // NOI18N
        getContentPane().add(panel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /** Exit the Application */    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        final App app = new App();
        app.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        app.setVisible(true);
    }

    public void setNames(List<String> names) {
        panel1.setNames(names);
    }

    public void setMaxPicks(int maxPicks) {
        panel1.setMaxPicks(maxPicks);
    }

    public void begin() {
        panel1.begin();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.dbschools.picker.Panel panel1;
    // End of variables declaration//GEN-END:variables

}
